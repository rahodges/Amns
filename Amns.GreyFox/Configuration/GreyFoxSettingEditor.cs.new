using System;
using System.Data;
using System.Web.UI;
using System.ComponentModel;
using ComponentArt.Web.UI;
using System.Web.UI.WebControls;
using Amns.GreyFox.Security;
using Amns.GreyFox.Web.UI.WebControls;

namespace Amns.GreyFox.Web.UI.WebControls
{
	/// <summary>
	/// Default web editor for GreyFoxSetting.
	/// </summary>
	[ToolboxData("<{0}:GreyFoxSettingEditor runat=server></{0}:GreyFoxSettingEditor>")]
	public class GreyFoxSettingEditor : System.Web.UI.WebControls.WebControl, INamingContainer
	{
		private int greyFoxSettingID;
		private GreyFoxSetting obj;
		private bool loadFlag = false;
		private bool resetOnAdd;
		private bool editOnAdd;

		protected ComponentArt.Web.UI.TabStrip tabstrip;
		protected ComponentArt.Web.UI.MultiPage multipage;
		protected Literal headerText;

		#region Private Control Fields for _system Folder

		protected ComponentArt.Web.UI.PageView _systemView;

		#endregion

		#region Private Control Fields for General Folder

		protected ComponentArt.Web.UI.PageView GeneralView;
		private TextBox tbName;
		private TextBox tbSettingValue;
		private ComponentArt.Web.UI.ComboBox comboParent;
		private ComponentArt.Web.UI.ComboBox comboModifyRole;
		private CheckBox cbIsSystemSetting;

		#endregion

		private Button btOk;
		private Button btCancel;
		private Button btDelete;

		#region Public Control Properties

		[Bindable(true), Category("Data"), DefaultValue(0)]
		public int GreyFoxSettingID
		{
			get
			{
				return greyFoxSettingID;
			}
			set
			{
				loadFlag = true;
				greyFoxSettingID = value;
			}
		}

		[Bindable(true), Category("Behavior"), DefaultValue(false)]
		public bool ResetOnAdd
		{
			get
			{
				return resetOnAdd;
			}
			set
			{
				resetOnAdd = value;
			}
		}

		[Bindable(true), Category("Behavior"), DefaultValue(false)]
		public bool EditOnAdd
		{
			get
			{
				return editOnAdd;
			}
			set
			{
				editOnAdd = value;
			}
		}

		#endregion

		protected override void CreateChildControls()
		{
			Panel container = new Panel();
			container.CssClass = this.CssClass;
			Controls.Add(container);
			Panel header = new Panel();
			header.CssClass = "pHead";
			container.Controls.Add(header);
			headerText = new Literal();
			header.Controls.Add(headerText);
			Panel content = new Panel();
			content.CssClass = "pContent";
			container.Controls.Add(content);
			#region Tab Strip

			tabstrip = new ComponentArt.Web.UI.TabStrip();

			// Create the DefaultTabLook instance and add it to the ItemLooks collection
			ComponentArt.Web.UI.ItemLook defaultTabLook = new ComponentArt.Web.UI.ItemLook();
			defaultTabLook.LookId = "DefaultTabLook";
			defaultTabLook.CssClass = "DefaultTab";
			defaultTabLook.HoverCssClass = "DefaultTabHover";
			defaultTabLook.LabelPaddingLeft = Unit.Parse("10");
			defaultTabLook.LabelPaddingRight = Unit.Parse("10");
			defaultTabLook.LabelPaddingTop = Unit.Parse("5");
			defaultTabLook.LabelPaddingBottom = Unit.Parse("4");
			defaultTabLook.LeftIconUrl = "tab_left_icon.gif";
			defaultTabLook.RightIconUrl = "tab_right_icon.gif";
			defaultTabLook.HoverLeftIconUrl = "hover_tab_left_icon.gif";
			defaultTabLook.HoverRightIconUrl = "hover_tab_right_icon.gif";
			defaultTabLook.LeftIconWidth = Unit.Parse("3");
			defaultTabLook.LeftIconHeight = Unit.Parse("21");
			defaultTabLook.RightIconWidth = Unit.Parse("3");
			defaultTabLook.RightIconHeight = Unit.Parse("21");
			tabstrip.ItemLooks.Add(defaultTabLook);

			// Create the SelectedTabLook instance and add it to the ItemLooks collection
			ComponentArt.Web.UI.ItemLook selectedTabLook = new ComponentArt.Web.UI.ItemLook();
			selectedTabLook.LookId = "SelectedTabLook";
			selectedTabLook.CssClass = "SelectedTab";
			selectedTabLook.LabelPaddingLeft = Unit.Parse("10");
			selectedTabLook.LabelPaddingRight = Unit.Parse("10");
			selectedTabLook.LabelPaddingTop = Unit.Parse("5");
			selectedTabLook.LabelPaddingBottom = Unit.Parse("4");
			selectedTabLook.LeftIconUrl = "selected_tab_left_icon.gif";
			selectedTabLook.RightIconUrl = "selected_tab_right_icon.gif";
			selectedTabLook.LeftIconWidth = Unit.Parse("3");
			selectedTabLook.LeftIconHeight = Unit.Parse("21");
			selectedTabLook.RightIconWidth = Unit.Parse("3");
			selectedTabLook.RightIconHeight = Unit.Parse("21");
			tabstrip.ItemLooks.Add(selectedTabLook);

			tabstrip.ID = this.ID + "_TabStrip";
			tabstrip.CssClass = "TopGroup";
			tabstrip.DefaultItemLookId = "DefaultTabLook";
			tabstrip.DefaultSelectedItemLookId = "SelectedTabLook";
			tabstrip.DefaultGroupTabSpacing = 1;
			tabstrip.ImagesBaseUrl = "tabstrip_images/";
			tabstrip.MultiPageId = this.ID + "_MultiPage";
			content.Controls.Add(tabstrip);

			#endregion

			#region MultiPage

			multipage = new ComponentArt.Web.UI.MultiPage();
			multipage.ID = this.ID + "_MultiPage";
			multipage.CssClass = "MultiPage";
			content.Controls.Add(multipage);

			#endregion

			#region Child Controls for General Folder

			GeneralView = new ComponentArt.Web.UI.PageView();
			GeneralView.CssClass = "PageContent";
			multipage.PageViews.Add(GeneralView);

			TabStripTab GeneralTab = new TabStripTab();
			GeneralTab.Text = "General";
			GeneralTab.PageViewId = GeneralView.ID;
			tabstrip.Tabs.Add(GeneralTab);

			GeneralView.Controls.Add(new LiteralControl("<div class=\"inputrow\">"));
			GeneralView.Controls.Add(new LiteralControl("<span class=\"inputlabel\">Name</span>"));
			GeneralView.Controls.Add(new LiteralControl("<span class=\"inputfield\">"));
			tbName = new TextBox();
			tbName.EnableViewState = false;
			GeneralView.Controls.Add(tbName);
			GeneralView.Controls.Add(new LiteralControl("</span></div>"));

			GeneralView.Controls.Add(new LiteralControl("<div class=\"inputrow\">"));
			GeneralView.Controls.Add(new LiteralControl("<span class=\"inputlabel\">SettingValue</span>"));
			GeneralView.Controls.Add(new LiteralControl("<span class=\"inputfield\">"));
			tbSettingValue = new TextBox();
			tbSettingValue.EnableViewState = false;
			GeneralView.Controls.Add(tbSettingValue);
			GeneralView.Controls.Add(new LiteralControl("</span></div>"));

			GeneralView.Controls.Add(new LiteralControl("<div class=\"inputrow\">"));
			GeneralView.Controls.Add(new LiteralControl("<span class=\"inputlabel\">Parent</span>"));
			GeneralView.Controls.Add(new LiteralControl("<span class=\"inputfield\">"));
			comboParent = new ComponentArt.Web.UI.ComboBox();
			comboParent.CssClass = "comboBox";
			comboParent.HoverCssClass = "comboBoxHover";
			comboParent.FocusedCssClass = "comboBoxHover";
			comboParent.TextBoxCssClass = "comboTextBox";
			comboParent.DropDownCssClass = "comboDropDown";
			comboParent.ItemCssClass = "comboItem";
			comboParent.ItemHoverCssClass = "comboItemHover";
			comboParent.SelectedItemCssClass = "comboItemHover";
			comboParent.DropHoverImageUrl = "images/drop_hover.gif";
			comboParent.DropImageUrl = "images/drop.gif";
			comboParent.Width = Unit.Pixel(300);
			GeneralView.Controls.Add(comboParent);
			GeneralView.Controls.Add(new LiteralControl("</span></div>"));

			GeneralView.Controls.Add(new LiteralControl("<div class=\"inputrow\">"));
			GeneralView.Controls.Add(new LiteralControl("<span class=\"inputlabel\">ModifyRole</span>"));
			GeneralView.Controls.Add(new LiteralControl("<span class=\"inputfield\">"));
			comboModifyRole = new ComponentArt.Web.UI.ComboBox();
			comboModifyRole.CssClass = "comboBox";
			comboModifyRole.HoverCssClass = "comboBoxHover";
			comboModifyRole.FocusedCssClass = "comboBoxHover";
			comboModifyRole.TextBoxCssClass = "comboTextBox";
			comboModifyRole.DropDownCssClass = "comboDropDown";
			comboModifyRole.ItemCssClass = "comboItem";
			comboModifyRole.ItemHoverCssClass = "comboItemHover";
			comboModifyRole.SelectedItemCssClass = "comboItemHover";
			comboModifyRole.DropHoverImageUrl = "images/drop_hover.gif";
			comboModifyRole.DropImageUrl = "images/drop.gif";
			comboModifyRole.Width = Unit.Pixel(300);
			GeneralView.Controls.Add(comboModifyRole);
			GeneralView.Controls.Add(new LiteralControl("</span></div>"));

			GeneralView.Controls.Add(new LiteralControl("<div class=\"inputrow\">"));
			GeneralView.Controls.Add(new LiteralControl("<span class=\"inputlabel\">IsSystemSetting</span>"));
			GeneralView.Controls.Add(new LiteralControl("<span class=\"inputfield\">"));
			cbIsSystemSetting = new CheckBox();
			cbIsSystemSetting.EnableViewState = false;
			GeneralView.Controls.Add(cbIsSystemSetting);
			GeneralView.Controls.Add(new LiteralControl("</span></div>"));

			#endregion

			Panel buttons = new Panel();
			buttons.CssClass = "pButtons";
			content.Controls.Add(buttons);

			btOk = new Button();
			btOk.Text = "OK";
			btOk.Width = Unit.Pixel(72);
			btOk.EnableViewState = false;
			btOk.Click += new EventHandler(ok_Click);
			buttons.Controls.Add(btOk);

			btCancel = new Button();
			btCancel.Text = "Cancel";
			btCancel.Width = Unit.Pixel(72);
			btCancel.EnableViewState = false;
			btCancel.CausesValidation = false;
			btCancel.Click += new EventHandler(cancel_Click);
			buttons.Controls.Add(btCancel);

			btDelete = new Button();
			btDelete.Text = "Delete";
			btDelete.Width = Unit.Pixel(72);
			btDelete.EnableViewState = false;
			btDelete.Click += new EventHandler(delete_Click);
			buttons.Controls.Add(btDelete);

			bind();
			ChildControlsCreated = true;
		}

		private void bind()
		{
			#region Bind General Child Data

			GreyFoxSettingManager parentManager = new GreyFoxSettingManager();
			GreyFoxSettingCollection parentCollection = parentManager.GetCollection(string.Empty, string.Empty, null);
			ComponentArt.Web.UI.ComboBoxItem ParentNullItem = new ComponentArt.Web.UI.ComboBoxItem();
			ParentNullItem.Text = "Null";
			ParentNullItem.Value = "Null";
			comboParent.Items.Add(ParentNullItem);
			foreach(GreyFoxSetting parent in parentCollection)
			{
				ComponentArt.Web.UI.ComboBoxItem i = new ComponentArt.Web.UI.ComboBoxItem();
				i.Text = parent.ToString();
				i.Value = parent.ID.ToString();
				comboParent.Items.Add(i);
			}

			GreyFoxRoleManager modifyRoleManager = new GreyFoxRoleManager();
			GreyFoxRoleCollection modifyRoleCollection = modifyRoleManager.GetCollection(string.Empty, string.Empty);
			ComponentArt.Web.UI.ComboBoxItem ModifyRoleNullItem = new ComponentArt.Web.UI.ComboBoxItem();
			ModifyRoleNullItem.Text = "Null";
			ModifyRoleNullItem.Value = "Null";
			comboModifyRole.Items.Add(ModifyRoleNullItem);
			foreach(GreyFoxRole modifyRole in modifyRoleCollection)
			{
				ComponentArt.Web.UI.ComboBoxItem i = new ComponentArt.Web.UI.ComboBoxItem();
				i.Text = modifyRole.ToString();
				i.Value = modifyRole.ID.ToString();
				comboModifyRole.Items.Add(i);
			}

			#endregion

		}

		#region Events

		protected void ok_Click(object sender, EventArgs e)
		{
			if(greyFoxSettingID == 0)
				obj = new GreyFoxSetting();
			else
				obj = new GreyFoxSetting(greyFoxSettingID);

			obj.Name = tbName.Text;
			obj.SettingValue = tbSettingValue.Text;
			if(comboParent.SelectedItem != null && comboParent.SelectedItem.Value != "Null")
				obj.Parent = GreyFoxSetting.NewPlaceHolder(
					int.Parse(comboParent.SelectedItem.Value));
			else
				obj.Parent = null;

			if(comboModifyRole.SelectedItem != null && comboModifyRole.SelectedItem.Value != "Null")
				obj.ModifyRole = GreyFoxRole.NewPlaceHolder(
					int.Parse(comboModifyRole.SelectedItem.Value));
			else
				obj.ModifyRole = null;

			obj.IsSystemSetting = cbIsSystemSetting.Checked;
			if(editOnAdd)
				greyFoxSettingID = obj.Save();
			else
				obj.Save();

			if(resetOnAdd)
			{
				tbName.Text = string.Empty;
				tbSettingValue.Text = string.Empty;
				cbIsSystemSetting.Checked = false;
				msParent.SelectedIndex = 0;
				msModifyRole.SelectedIndex = 0;
			}

			OnUpdated(EventArgs.Empty);
		}

		protected void cancel_Click(object sender, EventArgs e)
		{
			this.OnCancelled(EventArgs.Empty);
		}

		protected void delete_Click(object sender, EventArgs e)
		{
			this.OnDeleteClicked(EventArgs.Empty);
		}

		public event EventHandler Cancelled;
		protected virtual void OnCancelled(EventArgs e)
		{
			if(Cancelled != null)
				Cancelled(this, e);
		}

		public event EventHandler Updated;
		protected virtual void OnUpdated(EventArgs e)
		{
			if(Updated != null)
				Updated(this, e);
		}

		public event EventHandler DeleteClicked;
		protected virtual void OnDeleteClicked(EventArgs e)
		{
			if(DeleteClicked != null)
			DeleteClicked(this, e);
		}

		#endregion

		protected override void OnPreRender(EventArgs e)
		{
			if(loadFlag)
			{
				if(greyFoxSettingID > 0)
				{
					obj = new GreyFoxSetting(greyFoxSettingID);
					headerText.Text = "Edit  - " + obj.ToString();
				}
				else if(greyFoxSettingID <= 0)
				{
					obj = new GreyFoxSetting();
					headerText.Text = "Add ";
				}

				// Bind General Data
				tbName.Text = obj.Name;
				tbSettingValue.Text = obj.SettingValue;
				if(obj.Parent != null)
					foreach(ListItem item in comboParent.Items)
						item.Selected = obj.Parent.ID.ToString() == item.Value;
					else
						msParent.SelectedIndex = 0;
				if(obj.ModifyRole != null)
					foreach(ListItem item in comboModifyRole.Items)
						item.Selected = obj.ModifyRole.ID.ToString() == item.Value;
					else
						msModifyRole.SelectedIndex = 0;
				cbIsSystemSetting.Checked = obj.IsSystemSetting;
				tabstrip.SelectedTab = tabstrip.Tabs[0];
			}
		}

		protected override void LoadViewState(object savedState)
		{
			if(savedState != null)
			{
				object[] myState = (object[]) savedState;
				if(myState[0] != null)
					base.LoadViewState(myState[0]);
				if(myState[1] != null)
					greyFoxSettingID = (int) myState[1];
			}
		}

		protected override object SaveViewState()
		{
			object baseState = base.SaveViewState();
			object[] myState = new object[2];
			myState[0] = baseState;
			myState[1] = greyFoxSettingID;
			return myState;
		}
	}
}

